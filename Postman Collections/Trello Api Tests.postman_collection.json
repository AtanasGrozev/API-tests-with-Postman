{
	"info": {
		"_postman_id": "eb50965c-cd88-4bad-89f8-4b12b8f55407",
		"name": "Trello Api Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28965930"
	},
	"item": [
		{
			"name": "Get All Boards",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"})",
							"",
							"pm.test('Response less then 300 sec', function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(30000);",
							"})",
							"",
							"pm.test('Response body is not empty', function () {",
							"    pm.expect(pm.response.text()).to.not.be.empty;",
							"})",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/1/members/me/boards?key=bc12f39d611ef973ecd21023167920be&token=ATTA5d176ff19446e5d954489ecb432a81e71396efa4f9917985f5630595aea244d929FCC2CF&boardID=65f70ba0b01fa0c8ca078806",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "bc12f39d611ef973ecd21023167920be"
						},
						{
							"key": "token",
							"value": "ATTA5d176ff19446e5d954489ecb432a81e71396efa4f9917985f5630595aea244d929FCC2CF"
						},
						{
							"key": "boardID",
							"value": "65f70ba0b01fa0c8ca078806"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    \r",
							"})\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set('boardID', responseData.id)\r",
							"\r",
							"pm.test(\"Response data id check\", function () {\r",
							"    pm.expect(responseData.name).to.equal(\"Final Postman Board\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=Final Postman Board&key=bc12f39d611ef973ecd21023167920be&token=ATTA5d176ff19446e5d954489ecb432a81e71396efa4f9917985f5630595aea244d929FCC2CF",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Final Postman Board"
						},
						{
							"key": "key",
							"value": "bc12f39d611ef973ecd21023167920be"
						},
						{
							"key": "token",
							"value": "ATTA5d176ff19446e5d954489ecb432a81e71396efa4f9917985f5630595aea244d929FCC2CF"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Single Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set('', responseData.id)\r",
							"\r",
							"pm.test('Return single board by ID' , function () {\r",
							"\r",
							"pm.expect(responseData.name).to.equal(\"Final Postman Board\");\r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardID}}?key={{trelloKey }}&token={{trelloToken}}&boardID={{boardID}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "boardID",
							"value": "{{boardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TO DO list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set('ToDoListID', responseData.id)\r",
							"\r",
							"pm.test(\"Create To Do list\", function () {\r",
							"\r",
							"pm.expect(responseData.name).to.equals(\"To Do lIst\");\r",
							"\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardID}}/lists?name=To Do lIst&key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "To Do lIst"
						},
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set('idDoneList', responseData.id)\r",
							"\r",
							"pm.test(\"Create Done list\", function () {\r",
							"\r",
							"pm.expect(responseData.name).to.equals(\"Done\");\r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardID}}/lists?name=Done&key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Done"
						},
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Lists from a Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"\r",
							"pm.test('Response array is not empty', function () {\r",
							"    pm.expect(responseData).to.not.be.empty;\r",
							"})\r",
							"\r",
							"\r",
							"pm.test('Content type is application/json', function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardID}}/lists?key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card in TO DO List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set('CARDinToDoList', responseData.id)\r",
							"\r",
							"pm.test('Check name of card in list', function () {\r",
							"pm.expect(responseData.name).to.equal(\"Sign Up for Trello\")\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?idList={{ToDoListID}}&name=Sign Up for Trello&key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{ToDoListID}}"
						},
						{
							"key": "name",
							"value": "Sign Up for Trello"
						},
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move Card to DONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set('CARDinToDoList', responseData.id)\r",
							"\r",
							"pm.test('Card Id is correct', function () {\r",
							"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test('Check name of card in Done list', function () {\r",
							"pm.expect(responseData.name).to.equal(\"Sign Up for Trello\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{CARDinToDoList}}?idList={{idDoneList}}&key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{CARDinToDoList}}"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{idDoneList}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"pm.test('There is empty output limits', function() {\r",
							"    pm.expect(responseData).to.have.property('limits')\r",
							"    pm.expect(responseData.limits).to.be.an('object')\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/{{CARDinToDoList}}?key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						"{{CARDinToDoList}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"pm.test('Response _value is null', function() {\r",
							"    pm.expect(responseData).to.have.property('_value'); \r",
							"    pm.expect(responseData._value).to.be.null; \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/{{boardID}}?key={{trelloKey }}&token={{trelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey }}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "",
			"type": "string"
		},
		{
			"key": "trelloKey ",
			"value": "",
			"type": "string"
		},
		{
			"key": "trelloToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "boardID",
			"value": "",
			"type": "string"
		},
		{
			"key": "ToDoListID",
			"value": "",
			"type": "string"
		},
		{
			"key": "idDoneList",
			"value": "",
			"type": "string"
		},
		{
			"key": "CARDinToDoList",
			"value": "",
			"type": "string"
		},
		{
			"value": ""
		},
		{
			"value": ""
		}
	]
}