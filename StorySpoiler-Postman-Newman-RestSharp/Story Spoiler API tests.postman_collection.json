{
	"info": {
		"_postman_id": "5af26dd9-8791-49fc-8732-68ab8c65e235",
		"name": "Story Spoiler API tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28965930",
		"_collection_link": "https://restless-shadow-619547.postman.co/workspace/My-Workspace~339d057c-766b-4c7a-85cd-911262affeb8/collection/28965930-5af26dd9-8791-49fc-8732-68ab8c65e235?action=share&source=collection_link&creator=28965930"
	},
	"item": [
		{
			"name": "Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"const responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"accessToken\", responseData.accessToken);\r",
							"\r",
							"pm.test(\"Username, password, and accessToken should not be empty\", function () {\r",
							"    pm.expect(responseData.username).not.to.be.empty;\r",
							"    pm.expect(responseData.password).not.to.be.empty;\r",
							"    pm.expect(responseData.accessToken).not.to.be.empty;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"userName\": \"atanas\", \r\n\"password\": \"123456\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"const responseData = pm.response.json()",
							"",
							"pm.test(\"Response message is created\", function () {",
							"    pm.expect(responseData.msg).to.eql(`Successfully created!`);",
							"});",
							"",
							"pm.test(\"Story ID is set in collection variables\", function () {",
							"    let storyId = responseData.storyId;",
							"    pm.collectionVariables.set(\"storyId\", storyId);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomNumber = Math.floor(Math.random()*1000)\r",
							"var randomTitle = \"title\" + randomNumber\r",
							"\r",
							"pm.collectionVariables.set(\"randomTitle\", randomTitle)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\": \"{{randomTitle}}\", \r\n\"description\": \"Description of the {{randomTitle}}\", \r\n\"url\": \"\"\r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search for the Created Story Spoiler by Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseData = pm.response.json();",
							"",
							"pm.test('Array is not empty', function () {",
							"",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
							"});",
							"",
							"pm.test(\"Array contains search story\", function () {",
							"    const randomStoryTitle = pm.collectionVariables.get(\"randomTitle\")",
							"    pm.expect(responseData[0].title).to.eql(randomStoryTitle) ",
							"   ",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Search?keyword={{randomTitle}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Search"
					],
					"query": [
						{
							"key": "keyword",
							"value": "{{randomTitle}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Created Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseData = pm.response.json();",
							"",
							"pm.test(\"Response body contains a Successfully edited msg\", function () {",
							"    pm.expect(responseData.msg).to.equal(\"Successfully edited\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"title\": \"Edited Story Title\", \r\n\"description\": \"Edited Story description \", \r\n\"url\": \"\"\r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Edit/{{storyId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Edit",
						"{{storyId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Story Spoiler",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Code is 200', function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const responseData = pm.response.json();",
							"",
							"pm.test(\"Response body contains a message Deleted successfully!\", function () {",
							"    pm.expect(responseData.msg).to.equal(\"Deleted successfully!\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Story/Delete/{{storyId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Story",
						"Delete",
						"{{storyId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://d5wfqm7y6yb3q.cloudfront.net",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "storyId",
			"value": ""
		}
	]
}